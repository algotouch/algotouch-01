
import { createClient } from '@supabase/supabase-js';
import { PaymentSessionData } from '@/types/payment';

const supabaseUrl = import.meta.env.VITE_SUPABASE_URL || '';
const supabaseKey = import.meta.env.VITE_SUPABASE_ANON_KEY || '';
const supabase = createClient(supabaseUrl, supabaseKey);

export class CardComRedirectService {
  /**
   * Updates the payment session data in the database.
   * @param sessionId - The session ID to update.
   * @param data - The data to update the session with.
   * @returns A promise that resolves when the update is complete.
   */
  static async updatePaymentSession(sessionId: string, data: Partial<PaymentSessionData>): Promise<void> {
    try {
      const { error } = await supabase
        .from('payment_sessions')
        .update(data)
        .eq('session_id', sessionId);

      if (error) {
        console.error('Error updating payment session:', error);
        throw new Error(`Failed to update payment session: ${error.message}`);
      }
      console.log(`Payment session ${sessionId} updated successfully with data:`, data);
    } catch (error: any) {
      console.error(`Error updating payment session ${sessionId}:`, error);
      throw new Error(`Failed to update payment session: ${error.message}`);
    }
  }
}
